;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 30/11/2023 09:39:28
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF23  	GOTO        70
_Interrupt_HIGH:
;Exemplo_9_Interrupt_TMR0.c,31 :: 		void Interrupt_HIGH() iv 0x0008 ics ICS_AUTO {   //Alta prioridade de interrupção
;Exemplo_9_Interrupt_TMR0.c,33 :: 		if(INTCON.TMR0IF == 1)    //Foi o TIMER0 que gerou a interrupção ?
0x0008	0xA4F2      	BTFSS       INTCON, 2 
0x000A	0xD00A      	BRA         L_Interrupt_HIGH0
;Exemplo_9_Interrupt_TMR0.c,35 :: 		PORTD.RD2 = ~LATD.RD2; //PISCA O LED no PORTD
0x000C	0xB48C      	BTFSC       LATD, 2 
0x000E	0xD002      	BRA         L__Interrupt_HIGH5
0x0010	0x8483      	BSF         PORTD, 2 
0x0012	0xD001      	BRA         L__Interrupt_HIGH6
L__Interrupt_HIGH5:
0x0014	0x9483      	BCF         PORTD, 2 
L__Interrupt_HIGH6:
;Exemplo_9_Interrupt_TMR0.c,37 :: 		TMR0H = 0XCF;          //Recarregar o TIMER para 200ms
0x0016	0x0ECF      	MOVLW       207
0x0018	0x6ED7      	MOVWF       TMR0H 
;Exemplo_9_Interrupt_TMR0.c,38 :: 		TMR0L = 0X2C;
0x001A	0x0E2C      	MOVLW       44
0x001C	0x6ED6      	MOVWF       TMR0L 
;Exemplo_9_Interrupt_TMR0.c,39 :: 		INTCON.TMR0IF = 0;   //Não esquecer de zerar a Flag, pois é responsável por
0x001E	0x94F2      	BCF         INTCON, 2 
;Exemplo_9_Interrupt_TMR0.c,41 :: 		}
L_Interrupt_HIGH0:
;Exemplo_9_Interrupt_TMR0.c,43 :: 		}    // Fim da subrotina de interrupção
L_end_Interrupt_HIGH:
L__Interrupt_HIGH4:
0x0020	0x0011      	RETFIE      1
; end of _Interrupt_HIGH
_ConfigTIMER:
;Exemplo_9_Interrupt_TMR0.c,55 :: 		void ConfigTIMER()
;Exemplo_9_Interrupt_TMR0.c,65 :: 		T0CON = 0B00000100;  //TIMER_OFF, MOD_16BITS, TIMER, PRES_1:32
0x0022	0x0E04      	MOVLW       4
0x0024	0x6ED5      	MOVWF       T0CON 
;Exemplo_9_Interrupt_TMR0.c,66 :: 		TMR0H = 0XCF;   // Carga do valor inicial
0x0026	0x0ECF      	MOVLW       207
0x0028	0x6ED7      	MOVWF       TMR0H 
;Exemplo_9_Interrupt_TMR0.c,67 :: 		TMR0L = 0X2C;
0x002A	0x0E2C      	MOVLW       44
0x002C	0x6ED6      	MOVWF       TMR0L 
;Exemplo_9_Interrupt_TMR0.c,69 :: 		INTCON.TMR0IF = 0;  //zera a Flag  (vai p/ 1 quando ocorrer o overflow)
0x002E	0x94F2      	BCF         INTCON, 2 
;Exemplo_9_Interrupt_TMR0.c,70 :: 		T0CON.TMR0ON = 1;   //Liga o TIMER0
0x0030	0x8ED5      	BSF         T0CON, 7 
;Exemplo_9_Interrupt_TMR0.c,71 :: 		}
L_end_ConfigTIMER:
0x0032	0x0012      	RETURN      0
; end of _ConfigTIMER
_ConfigInterrupt:
;Exemplo_9_Interrupt_TMR0.c,73 :: 		void ConfigInterrupt()
;Exemplo_9_Interrupt_TMR0.c,75 :: 		INTCON.GIE = 1;   //Chave Geral, Habilita o uso de interrupção
0x0034	0x8EF2      	BSF         INTCON, 7 
;Exemplo_9_Interrupt_TMR0.c,77 :: 		RCON.IPEN = 0; //0 -> (default) herança da família PIC16F, onde existe apenas
0x0036	0x9ED0      	BCF         RCON, 7 
;Exemplo_9_Interrupt_TMR0.c,91 :: 		INTCON.TMR0IE = 1;   //Habilita a interrupção individual do TIMER0
0x0038	0x8AF2      	BSF         INTCON, 5 
;Exemplo_9_Interrupt_TMR0.c,92 :: 		}
L_end_ConfigInterrupt:
0x003A	0x0012      	RETURN      0
; end of _ConfigInterrupt
_ConfigMCU:
;Exemplo_9_Interrupt_TMR0.c,47 :: 		void ConfigMCU()
;Exemplo_9_Interrupt_TMR0.c,49 :: 		ADCON1 |= 0X0F;    // pinos do microcontrolador como digitais
0x003C	0x0E0F      	MOVLW       15
0x003E	0x12C1      	IORWF       ADCON1, 1 
;Exemplo_9_Interrupt_TMR0.c,51 :: 		TRISD = 0;       //Configurar os pinos de controle dos LEDs
0x0040	0x6A95      	CLRF        TRISD 
;Exemplo_9_Interrupt_TMR0.c,52 :: 		PORTD = 0;      // inicialmente desligado
0x0042	0x6A83      	CLRF        PORTD 
;Exemplo_9_Interrupt_TMR0.c,53 :: 		}
L_end_ConfigMCU:
0x0044	0x0012      	RETURN      0
; end of _ConfigMCU
_main:
;Exemplo_9_Interrupt_TMR0.c,95 :: 		void main() {
;Exemplo_9_Interrupt_TMR0.c,96 :: 		ConfigMCU();           //pinos do MCU config. para acionar os LEDS
0x0046	0xDFFA      	RCALL       _ConfigMCU
;Exemplo_9_Interrupt_TMR0.c,97 :: 		ConfigTIMER();         // tempo config. e TIMER ligado
0x0048	0xDFEC      	RCALL       _ConfigTIMER
;Exemplo_9_Interrupt_TMR0.c,98 :: 		ConfigInterrupt(); //Configuração global das interrupções
0x004A	0xDFF4      	RCALL       _ConfigInterrupt
;Exemplo_9_Interrupt_TMR0.c,101 :: 		while(1) {  // Endless loop
L_main1:
;Exemplo_9_Interrupt_TMR0.c,102 :: 		} //while
0x004C	0xD7FF      	BRA         L_main1
;Exemplo_9_Interrupt_TMR0.c,103 :: 		} //main
L_end_main:
0x004E	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [26]    _Interrupt_HIGH
0x0022      [18]    _ConfigTIMER
0x0034       [8]    _ConfigInterrupt
0x003C      [10]    _ConfigMCU
0x0046      [10]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0F83       [1]    PORTD
0x0F8C       [1]    LATD
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD0       [1]    RCON
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
